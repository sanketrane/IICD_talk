# cell death
death_propensity <- rpois(nPop, 0.03)
if (death_propensity[j] == 1){
Agent1$state[i] = "D"
}
# cell divsion
division_propensity <- rpois(nPop, 0.005)
if (division_propensity[j] == 1.0){
Agent1$GFP_level[j] =  Agent1$GFP_level[j]/2
dead_cells <- which(Agent1$state == "D")
Agent1[min(dead_cells), ] = Agent1[j, ]
}
}
Agent1_size <- nrow(Agent1)
NewCellindexfirst <- Agent1_size + 1
NewCellindexfinal <- Agent1_size + nPop
for (n in NewCellindexfirst:NewCellindexfinal){
NewCellOfAgeZero <- data.frame(agent_no = n,
state = "N",
cell_age = 0,
GFP_level = 1)
Agent1 <- rbind(Agent1, NewCellOfAgeZero)
}
}
for (i in 2:length(ts_pred)){
Time = ts_pred[i]
Prev_Time = ts_pred[i - 1]
print(Time)
for (j in 1:nPop){
# Ageing
Agent1$cell_age[j] <- Agent1$cell_age[j] + (Time - Prev_Time)
# loss of gfp by ageing
rate_gfp_loss = 1/7
Agent1$GFP_level[j] <- Agent1$GFP_level[j] * exp(-rate_gfp_loss * (Time - Prev_Time))
# cell death
death_propensity <- rpois(nPop, 0.03)
if (death_propensity[j] == 1){
Agent1$state[i] = "D"
}
# cell divsion
division_propensity <- rpois(nPop, 0.005)
if (division_propensity[j] == 1.0){
Agent1$GFP_level[j] =  Agent1$GFP_level[j]/2
dead_cells <- which(Agent1$state == "D")
Agent1[min(dead_cells), ] = Agent1[j, ]
}
}
}
#### ABM for GFP dist neutral model
Agent1 <- data.frame(agent_no = 1,
state = "N",
cell_age = 0,
GFP_level = 1, stringsAsFactors = F)
nPop <- 10
## create a population af agents
for (i in 2:nPop){
Agent2 <- data.frame(agent_no = i,
state = "N",
cell_age = 0,
GFP_level = 1)
Agent1 <- rbind(Agent1, Agent2)
}
ts_pred <- seq(0, 1, 0.1)
for (i in 2:length(ts_pred)){
Time = ts_pred[i]
Prev_Time = ts_pred[i - 1]
print(Time)
for (j in 1:nPop){
# Ageing
Agent1$cell_age[j] <- Agent1$cell_age[j] + (Time - Prev_Time)
# loss of gfp by ageing
rate_gfp_loss = 1/7
Agent1$GFP_level[j] <- Agent1$GFP_level[j] * exp(-rate_gfp_loss * (Time - Prev_Time))
# cell death
death_propensity <- rpois(nPop, 0.03)
if (death_propensity[j] == 1){
Agent1$state[i] = "D"
}
# cell divsion
division_propensity <- rpois(nPop, 0.005)
if (division_propensity[j] == 1.0){
Agent1$GFP_level[j] =  Agent1$GFP_level[j]/2
dead_cells <- which(Agent1$state == "D")
Agent1[min(dead_cells), ] = Agent1[j, ]
}
}
}
ts_pred <- seq(0, 10, 0.1)
for (i in 2:length(ts_pred)){
Time = ts_pred[i]
Prev_Time = ts_pred[i - 1]
print(Time)
for (j in 1:nPop){
# Ageing
Agent1$cell_age[j] <- Agent1$cell_age[j] + (Time - Prev_Time)
# loss of gfp by ageing
rate_gfp_loss = 1/7
Agent1$GFP_level[j] <- Agent1$GFP_level[j] * exp(-rate_gfp_loss * (Time - Prev_Time))
# cell death
death_propensity <- rpois(nPop, 0.03)
if (death_propensity[j] == 1){
Agent1$state[i] = "D"
}
# cell divsion
division_propensity <- rpois(nPop, 0.005)
if (division_propensity[j] == 1.0){
Agent1$GFP_level[j] =  Agent1$GFP_level[j]/2
dead_cells <- which(Agent1$state == "D")
Agent1[min(dead_cells), ] = Agent1[j, ]
}
}
}
system("python Desktop/Git_repositories/py_learning/my_py.py")
system("python Desktop/Git_repositories/py_learning/my_py.py")
system("python Desktop/Git_repositories/py_learning/my_py.py")
system("python Desktop/Git_repositories/py_learning/my_py.py")
system("python Desktop/Git_repositories/py_learning/my_py.py")
system("python Desktop/Git_repositories/py_learning/my_py.py")
system("python Desktop/Git_repositories/py_learning/my_py.py")
system("python Desktop/Git_repositories/py_learning/my_py.py")
system("python Desktop/Git_repositories/py_learning/my_py.py")
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
if (t >= 5){
value = exp(- eps_f * (time + A)) + eps_0
} else if (t > 0  & t < 5){
value = (1 - exp(- eps_f * t))
}
return(value)
}
tseq <- seq(0, 10)
plot(eps_func(tseq) ~ tseq)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
if (t >= 5){
value = exp(- eps_f * (t + A)) + eps_0
} else if (t > 0  & t < 5){
value = (1 - exp(- eps_f * t))
}
return(value)
}
tseq <- seq(0, 10)
plot(eps_func(tseq) ~ tseq)
eps_func(5)
eps_func(0)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
# if (t >= 5){
#  value = exp(- eps_f * (t + A)) + eps_0
#} else if (t > 0  & t < 5){
value = eps_0 * (1 - exp(- eps_f * t))
#}
return(value)
}
eps_func(0)
tseq <- seq(0, 10)
plot(eps_func(tseq) ~ tseq)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
if (t >= 5){
value = exp(- eps_f * (t + A)) + eps_0
} else if (t > 0  & t < 5){
value = eps_0 * (1 - exp(- eps_f * t))
}
return(value)
}
eps_func(0)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
if (t >= 5){
value = exp(- eps_f * (t + A)) + eps_0
} else if (t >= 0  & t < 5){
value = eps_0 * (1 - exp(- eps_f * t))
}
return(value)
}
eps_func(0)
tseq <- seq(0, 10)
plot(eps_func(tseq) ~ tseq)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
ifelse(t < 5,
eps_0 * (1 - exp(- eps_f * t)),
exp(- eps_f * (t + A)) + eps_0
)
return(value)
}
eps_func(0)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
ifelse(t < 5,
eps_0 * (1 - exp(- eps_f * t)),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func(0)
tseq <- seq(0, 10)
plot(eps_func(tseq) ~ tseq)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
ifelse(t < 5,
eps_0 * exp(- eps_f * t),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func(0)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
ifelse(t < 5,
eps_0 * exp(eps_f * t),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func(0)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
ifelse(t < 5,
eps_0 * exp(eps_f * (t - 5)),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func(0)
eps_func(5)
eps_func(4)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
ifelse(t < 5,
exp(eps_f * t),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func(4)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
ifelse(t < 5,
exp(-eps_f * t),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func(0)
tseq <- seq(0, 10)
plot(eps_func(tseq) ~ tseq)
tseq <- seq(0, 100)
plot(eps_func(tseq) ~ tseq)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
ifelse(t < 5,
eps_0 * exp(-eps_f * (t-5)),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func(0)
eps_0
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
eps5 = exp(- eps_f * (5 + A)) + eps_0
ifelse(t < 5,
eps5 * exp(-eps_f * (t-5)),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func(0)
tseq <- seq(0, 100)
plot(eps_func(tseq) ~ tseq)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
eps5 = exp(- eps_f * (5 + A)) + eps_0
ifelse(t < 5,
eps5 * exp(-0.01 * (t-5)),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func(0)
tseq <- seq(0, 100)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
eps5 = exp(- eps_f * (5 + A)) + eps_0
ifelse(t < 5,
eps5 * exp(-0.02 * (t-5)),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func(0)
tseq <- seq(0, 100)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
eps5 = exp(- eps_f * (5 + A)) + eps_0
ifelse(t < 5,
eps5 * exp(-0.025 * (t-5)),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func(0)
tseq <- seq(0, 100)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
eps5 = exp(- eps_f * (5 + A)) + eps_0
ifelse(t < 5,
eps5 * exp(-0.024 * (t-5)),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func(0)
tseq <- seq(0, 100)
plot(eps_func(tseq) ~ tseq)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
eps5 = exp(- eps_f * (5 + A)) + eps_0
ifelse(t < 5,
eps5 * exp(-0.022 * (t-5)),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func(0)
tseq <- seq(0, 100)
plot(eps_func(tseq) ~ tseq)
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
eps5 = exp(- eps_f * (5 + A)) + eps_0
ifelse(t < 5,
eps5 * exp(-0.021 * (t-5)),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func(0)
tseq <- seq(0, 100)
plot(eps_func(tseq) ~ tseq)
plot(eps_func(tseq) ~ tseq, linetype = 'l')
plot(eps_func(tseq) ~ tseq, type = 'l')
plot(eps_func(tseq) ~ tseq, type = 'l')
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
eps5 = exp(- eps_f * (5 + A)) + eps_0
print(eps5)
ifelse(t < 5,
eps5 * exp(-0.021 * (t-5)),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func(0)
log(1/0.8959979)/5
eps_func <- function(t){
eps_0 = 0.14965320
eps_f = 0.03470231
A = 3.43078629
eps5 = exp(- eps_f * (5 + A)) + eps_0
ifelse(t < 5,
eps5 * exp(-0.02196344 * (t-5)),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func(0)
tseq <- seq(0, 100)
plot(eps_func(tseq) ~ tseq, type = 'l')
eps_func2 <- function(t){
eps_0 = 0.24510453
eps_f = 0.01559996
A = 14.83715328
eps5 = exp(- eps_f * (5 + A)) + eps_0
print(eps5)
ifelse(t < 5,
eps5 * exp(-0.02196344 * (t-5)),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func(0)
eps_func2 <- function(t){
eps_0 = 0.24510453
eps_f = 0.01559996
A = 14.83715328
eps5 = exp(- eps_f * (5 + A)) + eps_0
print(eps5)
ifelse(t < 5,
eps5 * exp(-0.02196344 * (t-5)),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func2(0)
log(1/0.9789485)/5
eps_func2 <- function(t){
eps_0 = 0.24510453
eps_f = 0.01559996
A = 14.83715328
eps5 = exp(- eps_f * (5 + A)) + eps_0
ifelse(t < 5,
eps5 * exp(-0.004255249 * (t-5)),
exp(- eps_f * (t + A)) + eps_0
)
}
eps_func2(0)
tseq <- seq(0, 100)
plot(eps_func2(tseq) ~ tseq, type = 'l')
tseq <- seq(0, 100, 0.1)
plot(eps_func2(tseq) ~ tseq, type = 'l')
plot(eps_func2(tseq) ~ tseq, type = 'l', log='x')
tseq <- seq(0, 300, 1)
plot(eps_func2(tseq) ~ tseq, type = 'l', log='x')
plot(eps_func(tseq) ~ tseq, type = 'l', log='x')
tseq <- seq(0, 300, 0.1)
plot(eps_func2(tseq) ~ tseq, type = 'l', log='x')
plot(eps_func(tseq) ~ tseq, type = 'l', log='x')
plot(density(rnorm(1000, 1e6, 2e5)))
plot(density(rnorm(1000, 1e5, 2e5)))
plot(density(rnorm(1000, 1e5, 1e5)))
plot(density(rnorm(1000, 5e5, 1e5)))
plot(density(rnorm(1000, 5e5, 2e5)))
plot(density(rnorm(1000, 5e5, 1.2e5)))
plot(density(rnorm(1000, 5e5, 1.5e5)))
plot(density(rnorm(1000, 5e5, 1e5)))
plot(density(rnorm(1000, 5e5, 1.5e5)))
plot(density(rnorm(1000, 1e5, 8e4)))
plot(density(rnorm(1000, 1e5, 5e4)))
plot(density(rnorm(1000, 1e5, 2e4)))
plot(density(rnorm(1000, 1e5, 3e4)))
plot(density(rnorm(1000, 1e5, 3e4)))
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
setwd("~/Desktop/Talk_CUMC/IICD_talk")
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
